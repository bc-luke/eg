// This is a sample lexer generated by the ANTLR3 Maven Archetype
// generator. It shows how to use a superclass to implement
// support methods and variables you may use in the lexer actions
// rather than create a messy lexer that has the Java code embedded
// in it.
//

lexer grammar EgLexer;

options {

   language=Java;  // Default

   // Tell ANTLR to make the generated lexer class extend the
   // the named class, which is where any supporting code and 
   // variables will be placed.
   //
   superClass = AbstractEgLexer;
}

// What package should the generated source exist in?
//
@header {

    package com.bigcommerce.eg;
}

LBRACE : '{';
RBRACE : '}';
ASTERISK
       : '*';
LPAREN : '(';
RPAREN : ')';
COLON  : ':';
COMMA  : ',';
DOT    : '.';
EQUALS : '=';

<<<<<<< HEAD
INT    : 'int';
STRING : 'string';

MODEL  : 'model';

IDENTIFIER
       : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*
       ;

INTEGER_LITERAL
       : '0'..'9'+
       ;

STRING_LITERAL
  : '"'
    { StringBuilder b = new StringBuilder(); }
    ( '"' '"'       { b.appendCodePoint('"');}
    | c=~('"'|'\r'|'\n')  { b.appendCodePoint(c);}
    )*
    '"'
    { setText(b.toString()); }
  ;

WS  :   ( ' '
        | '\t'
        | '\r'
        | '\n'
        ) {$channel = HIDDEN;}
    ;


